From 089e71a878e8306f08b0ed8c0b4a161301fbdeb0 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Mon, 9 Mar 2015 15:51:29 +0100
Subject: [PATCH 1/3] Export BSSID and Frequency via D-Bus.

---
 gsupplicant/gsupplicant.h |  1 +
 gsupplicant/supplicant.c  |  8 ++++++++
 plugins/wifi.c            |  4 ++++
 src/network.c             |  8 ++++++++
 src/service.c             | 10 ++++++++++
 6 files changed, 32 insertions(+)

diff --git a/gsupplicant/gsupplicant.h b/gsupplicant/gsupplicant.h
index 187dc65..c44f751 100644
--- a/gsupplicant/gsupplicant.h
+++ b/gsupplicant/gsupplicant.h
@@ -308,6 +308,7 @@ const char *g_supplicant_network_get_identifier(GSupplicantNetwork *network);
 const char *g_supplicant_network_get_path(GSupplicantNetwork *network);
 const void *g_supplicant_network_get_ssid(GSupplicantNetwork *network,
 							unsigned int *ssid_len);
+const unsigned char *g_supplicant_network_get_bssid(GSupplicantNetwork *network);
 const char *g_supplicant_network_get_mode(GSupplicantNetwork *network);
 const char *g_supplicant_network_get_security(GSupplicantNetwork *network);
 dbus_int16_t g_supplicant_network_get_signal(GSupplicantNetwork *network);
diff --git a/gsupplicant/supplicant.c b/gsupplicant/supplicant.c
index cd91f95..3135327 100644
--- a/gsupplicant/supplicant.c
+++ b/gsupplicant/supplicant.c
@@ -956,6 +956,14 @@ const char *g_supplicant_network_get_identifier(GSupplicantNetwork *network)
 	return network->group;
 }
 
+const unsigned char *g_supplicant_network_get_bssid (GSupplicantNetwork *network)
+{
+	if (!network || !network->best_bss)
+		return "";
+
+	return network->best_bss->bssid;
+}
+
 const char *g_supplicant_network_get_path(GSupplicantNetwork *network)
 {
 	if (!network || !network->path)
diff --git a/plugins/wifi.c b/plugins/wifi.c
index 7bae7ae..c2925de 100644
--- a/plugins/wifi.c
+++ b/plugins/wifi.c
@@ -2521,6 +2521,7 @@ static void network_added(GSupplicantNetwork *supplicant_network)
 	struct wifi_data *wifi;
 	const char *name, *identifier, *security, *group, *mode;
 	const unsigned char *ssid;
+	const unsigned char *bssid;
 	unsigned int ssid_len;
 	bool wps;
 	bool wps_pbc;
@@ -2550,6 +2551,7 @@ static void network_added(GSupplicantNetwork *supplicant_network)
 		return;
 
 	ssid = g_supplicant_network_get_ssid(supplicant_network, &ssid_len);
+	bssid = g_supplicant_network_get_bssid(supplicant_network);
 
 	network = connman_device_get_network(wifi->device, identifier);
 
@@ -2574,6 +2576,8 @@ static void network_added(GSupplicantNetwork *supplicant_network)
 
 	connman_network_set_blob(network, "WiFi.SSID",
 						ssid, ssid_len);
+	connman_network_set_blob(network, "WiFi.BSSID",
+						bssid, 6);
 	connman_network_set_string(network, "WiFi.Security", security);
 	connman_network_set_strength(network,
 				calculate_strength(supplicant_network));
diff --git a/src/network.c b/src/network.c
index 94440dc..c0cab77 100644
--- a/src/network.c
+++ b/src/network.c
@@ -87,6 +87,7 @@ struct connman_network {
 		bool wps;
 		bool use_wps;
 		char *pin_wps;
+		unsigned char bssid[6];
 	} wifi;
 
 };
@@ -2039,6 +2040,8 @@ int connman_network_set_blob(struct connman_network *network,
 			network->wifi.ssid_len = size;
 		} else
 			network->wifi.ssid_len = 0;
+	} else if (g_str_equal(key, "WiFi.BSSID") && size == 6) {
+		memcpy(network->wifi.bssid, data, size);
 	} else {
 		return -EINVAL;
 	}
@@ -2064,6 +2067,11 @@ const void *connman_network_get_blob(struct connman_network *network,
 			*size = network->wifi.ssid_len;
 		return network->wifi.ssid;
 	}
+	else if (g_str_equal(key, "WiFi.BSSID")) {
+		if (size)
+			*size = 6;
+		return network->wifi.bssid;
+	}
 
 	return NULL;
 }
diff --git a/src/service.c b/src/service.c
index f5fb868..05dda19 100644
--- a/src/service.c
+++ b/src/service.c
@@ -2317,6 +2317,16 @@ static void append_properties(DBusMessageIter *dict, dbus_bool_t limited,
 						append_ethernet, service);
 		break;
 	case CONNMAN_SERVICE_TYPE_WIFI:
+	{
+		const unsigned char *bssid = connman_network_get_blob(service->network, "WiFi.BSSID", NULL);
+		uint16_t frequency = connman_network_get_frequency(service->network);
+		char* bssidString = g_strdup_printf("%02x:%02x:%02x:%02x:%02x:%02x", bssid[0], bssid[1], bssid[2], bssid[3], bssid[4], bssid[5]);
+		connman_dbus_dict_append_basic(dict, "BSSID", DBUS_TYPE_STRING, &bssidString);
+		connman_dbus_dict_append_basic(dict, "Frequency", DBUS_TYPE_UINT16, &frequency);
+
+		g_free(bssidString);
+	}
+		/* fall through ... */
 	case CONNMAN_SERVICE_TYPE_ETHERNET:
 	case CONNMAN_SERVICE_TYPE_BLUETOOTH:
 	case CONNMAN_SERVICE_TYPE_GADGET:
-- 
1.8.4.5

