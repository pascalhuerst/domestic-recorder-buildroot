From 8e6a213b1358b85e2fd8af1be6194d3fbb0ac609 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Tue, 31 Mar 2015 15:53:21 +0200
Subject: [PATCH] Filter out networks from non-station wifi interfaces.

* Add a filter to wifi::network_probe() that ensures that only networks
  seen on interfaces that support STATION mode are being accepted.
  This fixes the spurious (randomly appearing) problem where an attempt
  to connect to a wifi network is happening on the uap0 interface
  instead of wlan0.
---
 plugins/wifi.c | 27 +++++++++++++++++++++++++--
 1 file changed, 25 insertions(+), 2 deletions(-)

diff --git a/plugins/wifi.c b/plugins/wifi.c
index f7ee36e..7ef68a3 100644
--- a/plugins/wifi.c
+++ b/plugins/wifi.c
@@ -1915,8 +1915,30 @@ static void system_killed(void)
 
 static int network_probe(struct connman_network *network)
 {
+	struct connman_device *device = connman_network_get_device(network);
+	struct wifi_data *wifi;
+	const char* interfaceName;
+
 	DBG("network %p", network);
 
+	wifi = connman_device_get_data(device);
+	if (!wifi)
+		return -EINVAL;
+
+	interfaceName = connman_device_get_string(device, "Interface");
+	if (g_strcmp0(interfaceName, "uap0") == 0) {
+		// NOTE: this check is just a workaround for the fact that
+		//       uap0 claims that it supports station mode, too.
+		DBG("%s is not a STATION interface", interfaceName);
+		return -EINVAL;
+	}
+
+	unsigned int mode = g_supplicant_interface_get_mode(wifi->interface);
+	if ((mode & G_SUPPLICANT_CAPABILITY_MODE_IBSS) == 0) {
+		DBG("%s does not support STATION mode", interfaceName);
+		return -EINVAL;
+	}
+
 	return 0;
 }
 
@@ -2140,6 +2162,7 @@ static void interface_added(GSupplicantInterface *interface)
 {
 	const char *ifname = g_supplicant_interface_get_ifname(interface);
 	const char *driver = g_supplicant_interface_get_driver(interface);
+	unsigned int mode = g_supplicant_interface_get_mode(interface);
 	struct wifi_data *wifi;
 
 	wifi = g_supplicant_interface_get_data(interface);
@@ -2153,8 +2176,8 @@ static void interface_added(GSupplicantInterface *interface)
 		wifi->p2p_device = true;
 	}
 
-	DBG("ifname %s driver %s wifi %p tethering %d",
-			ifname, driver, wifi, wifi->tethering);
+	DBG("ifname %s driver %s wifi %p tethering %d mode 0x%x",
+			ifname, driver, wifi, wifi->tethering, mode);
 
 	if (!wifi->device) {
 		connman_error("WiFi device not set");
-- 
1.8.4.5

