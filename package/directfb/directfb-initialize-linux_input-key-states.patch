--- directfb-1.4.3-orig/inputdrivers/linux_input/linux_input.c	2009-12-08 13:55:27.000000000 +0100
+++ directfb-1.4.3/inputdrivers/linux_input/linux_input.c	2010-02-09 15:37:12.000000000 +0100
@@ -797,6 +797,8 @@
      struct input_event levt[64];
      fd_set             set;
      struct touchpad_fsm_state fsm_state;
+     unsigned long      keybit[NBITS(KEY_CNT)];
+     unsigned long      keystate[NBITS(KEY_CNT)];
 
      D_DEBUG_AT( Debug_LinuxInput, "%s()\n", __FUNCTION__ );
 
@@ -817,7 +819,33 @@
           fsm_state.y.max = absinfo.maximum;
      }
 
+     /* get keyboard bits */
+     ioctl( data->fd, EVIOCGBIT(EV_KEY, sizeof(keybit)), keybit );
+
+     /* get key states */
+     ioctl( data->fd, EVIOCGKEY(sizeof(keystate)), keystate );
+
+     /* for each key,
+        synthetize a press or release event depending on the key state */
+     for (i=0; i<=KEY_CNT; i++) {
+          if (test_bit( i, keybit )) {
+               const int key = translate_key( i );
+
+               if (DFB_KEY_TYPE(key) == DIKT_IDENTIFIER) {
+                    DFBInputEvent devt;
+
+                    devt.type     = (test_bit( i, keystate )
+                                     ? DIET_KEYPRESS : DIET_KEYRELEASE);
+                    devt.flags    = DIEF_KEYID | DIEF_KEYCODE;
+                    devt.key_id   = key;
+                    devt.key_code = i;
+
+                    dfb_input_dispatch( data->device, &devt );
+               }
+          }
+     }
+
      while (1) {
           DFBInputEvent devt = { .type = DIET_UNKNOWN };
 
 
