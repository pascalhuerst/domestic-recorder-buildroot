diff --git a/gfxdrivers/pxa3xx/pxa3xx-gcu.h b/gfxdrivers/pxa3xx/pxa3xx-gcu.h
index c92c0eb..0428ed0 100644
--- a/gfxdrivers/pxa3xx/pxa3xx-gcu.h
+++ b/gfxdrivers/pxa3xx/pxa3xx-gcu.h
@@ -36,41 +9,30 @@
 /* To be increased when breaking the ABI */
 #define PXA3XX_GCU_SHARED_MAGIC  0x30000001
 
+#define PXA3XX_GCU_BATCH_WORDS   8192
+
 struct pxa3xx_gcu_shared {
 	u32            buffer[PXA3XX_GCU_BUFFER_WORDS];
 
 	bool           hw_running;
-	int            hw_start;
-	int            hw_end;
-
-	int            next_start;
-	int            next_end;
-	int            next_valid;
 
 	unsigned long  buffer_phys;
 
 	unsigned int   num_words;
-	unsigned int   num_starts;
+	unsigned int   num_writes;
 	unsigned int   num_done;
 	unsigned int   num_interrupts;
 	unsigned int   num_wait_idle;
-	unsigned int   num_wait_next;
+	unsigned int   num_wait_free;
 	unsigned int   num_idle;
 
 	u32            magic;
 };
 
-struct pxa3xx_gcu_register {
-	u32		address;	/* in */
-	u32		value;		/* in/out */
-};
-
 /* Initialization and synchronization.
- * Hardware is started from user space via MMIO or via ioctl. */
+ * Hardware is started upon write(). */
 #define PXA3XX_GCU_IOCTL_RESET		_IO('G', 0)
-#define PXA3XX_GCU_IOCTL_START		_IO('G', 1)
 #define PXA3XX_GCU_IOCTL_WAIT_IDLE	_IO('G', 2)
-#define PXA3XX_GCU_IOCTL_WAIT_NEXT	_IO('G', 3)
 
 #endif /* __PXA3XX_GCU_H__ */
 
diff --git a/gfxdrivers/pxa3xx/pxa3xx.c b/gfxdrivers/pxa3xx/pxa3xx.c
index a6286f2..4181bb0 100644
--- a/gfxdrivers/pxa3xx/pxa3xx.c
+++ b/gfxdrivers/pxa3xx/pxa3xx.c
@@ -234,15 +234,15 @@ driver_close_driver( CoreGraphicsDevice *device,
 
      D_DEBUG_AT( PXA3XX_Driver, "%s()\n", __FUNCTION__ );
 
-     D_INFO( "PXA3XX/BLT: %u starts, %u done, %u interrupts, %u wait_idle, %u wait_next, %u idle\n",
-             shared->num_starts, shared->num_done, shared->num_interrupts,
-             shared->num_wait_idle, shared->num_wait_next, shared->num_idle );
+     D_INFO( "PXA3XX/BLT: %u writes, %u done, %u interrupts, %u wait_idle, %u wait_free, %u idle\n",
+             shared->num_writes, shared->num_done, shared->num_interrupts,
+             shared->num_wait_idle, shared->num_wait_free, shared->num_idle );
 
-     D_INFO( "PXA3XX/BLT: %u words, %u words/start, %u words/idle, %u starts/idle\n",
+     D_INFO( "PXA3XX/BLT: %u words, %u words/write, %u words/idle, %u writes/idle\n",
              shared->num_words,
-             shared->num_words  / (shared->num_starts ?: 1),
+             shared->num_words  / (shared->num_writes ?: 1),
              shared->num_words  / (shared->num_idle ?: 1),
-             shared->num_starts / (shared->num_idle ?: 1) );
+             shared->num_writes / (shared->num_idle ?: 1) );
 
      /* Unmap registers. */
      munmap( (void*) pdrv->mmio_base, 4096 );    // FIXME
diff --git a/gfxdrivers/pxa3xx/pxa3xx_blt.c b/gfxdrivers/pxa3xx/pxa3xx_blt.c
index cdc189c..8afded9 100644
--- a/gfxdrivers/pxa3xx/pxa3xx_blt.c
+++ b/gfxdrivers/pxa3xx/pxa3xx_blt.c
@@ -152,64 +152,11 @@ check_blend_functions( const CardState *state )
 
 /**********************************************************************************************************************/
 
-#define PXA_GCU_REG(x)        (*(volatile u32*)(pdrv->mmio_base+(x)))
-
-#define PXA_GCRBBR           PXA_GCU_REG(0x020)
-#define PXA_GCRBLR           PXA_GCU_REG(0x024)
-#define PXA_GCRBTR           PXA_GCU_REG(0x02C)
-
-#define mb() __asm__ __volatile__ ("" : : : "memory")
-
-static inline DFBResult
-start_hardware( PXA3XXDriverData *pdrv )
-{
-     PXA3XXGfxSharedArea *shared = pdrv->gfx_shared;
-
-     D_DEBUG_AT( PXA3XX_BLT, "%s()\n", __FUNCTION__ );
-
-     DUMP_INFO();
-
-     D_ASSERT( shared->next_valid );
-
-     if (shared->hw_running || shared->next_end == shared->next_start)
-          return DFB_FAILURE;
-
-     shared->hw_running = true;
-     shared->hw_start   = shared->next_start;
-     shared->hw_end     = shared->next_end;
-
-     shared->next_start = shared->next_end = (shared->hw_end + 63) & ~0x3f;
-
-     shared->num_words += shared->hw_end - shared->hw_start;
-
-     shared->num_starts++;
-
-     DUMP_INFO();
-
-     D_ASSERT( shared->buffer[shared->hw_end] == 0x08000000 );
-
-#ifdef PXA3XX_GCU_REG_USE_IOCTLS
-     ioctl( pdrv->gfx_fd, PXA3XX_GCU_IOCTL_START );
-#else
-     mb();
-
-     PXA_GCRBLR = 0;
-
-     PXA_GCRBBR = shared->buffer_phys + shared->hw_start*4;
-     PXA_GCRBTR = shared->buffer_phys + shared->hw_end*4;
-     PXA_GCRBLR = ((shared->hw_end - shared->hw_start + 63) & ~0x3f) * 4;
-
-     mb();
-#endif
-
-     return DFB_OK;
-}
-
 __attribute__((noinline))
 static DFBResult
 flush_prepared( PXA3XXDriverData *pdrv )
 {
-     PXA3XXGfxSharedArea *shared  = pdrv->gfx_shared;
+     int result;
 
      D_DEBUG_AT( PXA3XX_BLT, "%s()\n", __FUNCTION__ );
 
@@ -219,113 +166,14 @@ flush_prepared( PXA3XXDriverData *pdrv )
      D_ASSERT( pdrv->prep_num <= D_ARRAY_SIZE(pdrv->prep_buf) );
 
      /* Something prepared? */
-     while (pdrv->prep_num) {
-          int timeout = 2;
-          int next_end;
-
-          /* Mark shared information as invalid. From this point on the interrupt handler
-           * will not continue with the next block, and we'll start the hardware ourself. */
-          shared->next_valid = false;
-
-          mb();
-
-          /* Check if there's enough space at the end.
-           * Wait until hardware has started next block before it gets too big. */
-          if (shared->next_end + pdrv->prep_num >= PXA3XX_GCU_BUFFER_WORDS ||
-              shared->next_end - shared->next_start >= PXA3XX_GCU_BUFFER_WORDS/4)
-          {
-               /* If there's no next block waiting, start at the beginning. */
-               if (shared->next_start == shared->next_end)
-                    shared->next_start = shared->next_end = 0;
-               else {
-                    D_ASSERT( shared->buffer[shared->hw_end] == 0x08000000 );
-
-                    /* Mark area as valid again. */
-                    shared->next_valid = true;
-
-                    mb();
-
-                    /* Start in case it got idle while doing the checks. */
-                    if (start_hardware( pdrv )) {
-                         /*
-                          * Hardware has not been started (still running).
-                          * Check for timeout. */
-                         if (!timeout--) {
-                              D_ERROR( "PXA3XX/Blt: Timeout waiting for processing!\n" );
-                              direct_log_printf( NULL, "  -> %srunning, hw %d-%d, next %d-%d - %svalid\n",     \
-                                                 pdrv->gfx_shared->hw_running ? "" : "not ",             \
-                                                 pdrv->gfx_shared->hw_start,                             \
-                                                 pdrv->gfx_shared->hw_end,                               \
-                                                 pdrv->gfx_shared->next_start,                           \
-                                                 pdrv->gfx_shared->next_end,                             \
-                                                 pdrv->gfx_shared->next_valid ? "" : "not " );
-                              D_ASSERT( shared->buffer[shared->hw_end] == 0x08000000 );
-//                              pxa3xxEngineReset( pdrv, pdrv->dev );
-
-                              return DFB_TIMEOUT;
-                         }
-
-                         /* Wait til next block is started. */
-                         ioctl( pdrv->gfx_fd, PXA3XX_GCU_IOCTL_WAIT_NEXT );
-                    }
-
-                    /* Start over with the checks. */
-                    continue;
-               }
+     if (pdrv->prep_num) {
+          result = write( pdrv->gfx_fd, pdrv->prep_buf, pdrv->prep_num * 4 );
+          if (result < 0) {
+               D_PERROR( "PXA3XX/BLT: write() failed!\n" );
+               return DFB_IO;
           }
 
-          /* We are appending in case there was already a next block. */
-          next_end = shared->next_end + pdrv->prep_num;
-
-          /* Reset the timeout counter. */
-          timeout = 20;
-
-          /* While the hardware is running... */
-          while (shared->hw_running) {
-               D_ASSERT( shared->buffer[shared->hw_end] == 0x08000000 );
-
-               /* ...make sure we don't over lap with its current buffer, otherwise wait. */
-               if (shared->hw_start > next_end || shared->hw_end < shared->next_start)
-                    break;
-
-               /* Check for timeout. */
-               if (!timeout--) {
-                    D_ERROR( "PXA3XX/Blt: Timeout waiting for space!\n" );
-                    direct_log_printf( NULL, "  -> %srunning, hw %d-%d, next %d-%d - %svalid\n",     \
-                                       pdrv->gfx_shared->hw_running ? "" : "not ",             \
-                                       pdrv->gfx_shared->hw_start,                             \
-                                       pdrv->gfx_shared->hw_end,                               \
-                                       pdrv->gfx_shared->next_start,                           \
-                                       pdrv->gfx_shared->next_end,                             \
-                                       pdrv->gfx_shared->next_valid ? "" : "not " );
-                    D_ASSERT( shared->buffer[shared->hw_end] == 0x08000000 );
-//                    pxa3xxEngineReset( pdrv, pdrv->dev );
-
-                    return DFB_TIMEOUT;
-               }
-
-               /* Wait til next block is started. */
-               ioctl( pdrv->gfx_fd, PXA3XX_GCU_IOCTL_WAIT_NEXT );
-          }
-
-          /* Copy from local to shared buffer. */
-          direct_memcpy( (void*) &shared->buffer[shared->next_end], &pdrv->prep_buf[0], pdrv->prep_num * sizeof(u32) );
-
-          /* Terminate the block. */
-          shared->buffer[next_end] = 0x08000000;
-
-          /* Update next block information and mark valid. */
-          shared->next_end   = next_end;
-
-          mb();
-
-          shared->next_valid = true;
-
-          /* Reset local counter. */
           pdrv->prep_num = 0;
-
-          /* Start in case it is idle. */
-          return start_hardware( pdrv );
      }
 
      return DFB_OK;
@@ -451,13 +299,8 @@ pxa3xxEngineSync( void *drv, void *dev )
           ret = errno2result( errno );
           D_PERROR( "PXA3XX/BLT: PXA3XX_GCU_IOCTL_WAIT_IDLE failed!\n" );
 
-          direct_log_printf( NULL, "  -> %srunning, hw %d-%d, next %d-%d - %svalid\n",     \
-                             pdrv->gfx_shared->hw_running ? "" : "not ",             \
-                             pdrv->gfx_shared->hw_start,                             \
-                             pdrv->gfx_shared->hw_end,                               \
-                             pdrv->gfx_shared->next_start,                           \
-                             pdrv->gfx_shared->next_end,                             \
-                             pdrv->gfx_shared->next_valid ? "" : "not " );
+          direct_log_printf( NULL, "  -> %srunning\n",
+                             pdrv->gfx_shared->hw_running ? "" : "not " );
 
           break;
      }
diff --git a/gfxdrivers/pxa3xx/pxa3xx_dump.c b/gfxdrivers/pxa3xx/pxa3xx_dump.c
index 215e859..7a2e5ed 100644
--- a/gfxdrivers/pxa3xx/pxa3xx_dump.c
+++ b/gfxdrivers/pxa3xx/pxa3xx_dump.c
@@ -135,14 +135,8 @@ main( int argc, char *argv[] )
           printf( "\n" );
           printf( "\n" );
 
-          printf( "%s, hw %5d-%5d, next %5d-%5d, %svalid, "
-                  "STATUS 0x%02x, B 0x%08x [%d], E %5d, H %5d, T %5d\n",
+          printf( "%s, STATUS 0x%02x, B 0x%08x [%d], E %5d, H %5d, T %5d\n",
                   gfx_shared->hw_running ? "running" : "idle   ",
-                  gfx_shared->hw_start,
-                  gfx_shared->hw_end,
-                  gfx_shared->next_start,
-                  gfx_shared->next_end,
-                  gfx_shared->next_valid ? "  " : "in",
                   PXA_GCISCR & PXA_GCISCR_ALL,
                   PXA_GCRBBR, PXA_GCRBLR,
                   (PXA_GCRBEXHR - base) / 4,
@@ -151,15 +145,15 @@ main( int argc, char *argv[] )
 
           printf( "\n" );
 
-          printf( "      %u starts, %u done, %u interrupts, %u wait_idle, %u wait_next, %u idle\n",
-                  gfx_shared->num_starts, gfx_shared->num_done, gfx_shared->num_interrupts,
-                  gfx_shared->num_wait_idle, gfx_shared->num_wait_next, gfx_shared->num_idle );
+          printf( "      %u writes, %u done, %u interrupts, %u wait_idle, %u wait_free, %u idle\n",
+                  gfx_shared->num_writes, gfx_shared->num_done, gfx_shared->num_interrupts,
+                  gfx_shared->num_wait_idle, gfx_shared->num_wait_free, gfx_shared->num_idle );
 
-          printf( "      %u words, %u words/start, %u words/idle, %u starts/idle\n",
+          printf( "      %u words, %u words/write, %u words/idle, %u writes/idle\n",
                   gfx_shared->num_words,
-                  gfx_shared->num_words  / (gfx_shared->num_starts ?: 1),
+                  gfx_shared->num_words  / (gfx_shared->num_writes ?: 1),
                   gfx_shared->num_words  / (gfx_shared->num_idle ?: 1),
-                  gfx_shared->num_starts / (gfx_shared->num_idle ?: 1) );
+                  gfx_shared->num_writes / (gfx_shared->num_idle ?: 1) );
 
           printf( "\n" );
 
diff --git a/gfxdrivers/pxa3xx/pxa3xx_types.h b/gfxdrivers/pxa3xx/pxa3xx_types.h
index de700d7..41c2b39 100644
--- a/gfxdrivers/pxa3xx/pxa3xx_types.h
+++ b/gfxdrivers/pxa3xx/pxa3xx_types.h
@@ -30,8 +30,7 @@
 
 #include <pxa3xx-gcu.h>
 
-
-#define PXA3XX_GFX_MAX_PREPARE             8192
+#define PXA3XX_GFX_MAX_PREPARE     (PXA3XX_GCU_BATCH_WORDS - 1)
 
 
 typedef volatile struct pxa3xx_gcu_shared PXA3XXGfxSharedArea;
@@ -85,7 +84,7 @@ typedef struct {
      PXA3XXGfxSharedArea     *gfx_shared;
 
      int                      prep_num;
-     __u32                    prep_buf[PXA3XX_GFX_MAX_PREPARE];
+     u32                      prep_buf[PXA3XX_GFX_MAX_PREPARE];
 
      volatile void           *mmio_base;
 } PXA3XXDriverData;
