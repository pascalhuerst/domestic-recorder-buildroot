From 735aee92d768331543a8a4aefc29e0a1a143bde9 Mon Sep 17 00:00:00 2001
From: "Zeeshan Ali (Khattak)" <zeeshanak@gnome.org>
Date: Sat, 6 Nov 2010 21:57:46 +0200
Subject: [PATCH] Handle DLNA namespace like other namespaces

Declare/create the DLNA namespace only once at the start of the DIDL-Lite
document (just like upnp and dc namespaces) and pass that to each object
in that document.

This change also implies exposing the 'DLNA' namespace to public API.
---
 doc/gupnp-av-sections.txt                    |    1 +
 libgupnp-av/gupnp-didl-lite-object-private.h |    3 +-
 libgupnp-av/gupnp-didl-lite-object.c         |   65 ++++++++++++++++++++++----
 libgupnp-av/gupnp-didl-lite-object.h         |    4 ++
 libgupnp-av/gupnp-didl-lite-parser.c         |   13 +++++-
 libgupnp-av/gupnp-didl-lite-writer.c         |   12 ++++-
 libgupnp-av/gupnp-didl-lite-writer.h         |    1 +
 7 files changed, 86 insertions(+), 13 deletions(-)

diff --git a/doc/gupnp-av-sections.txt b/doc/gupnp-av-sections.txt
index 9ecf96e..ca65812 100644
--- a/doc/gupnp-av-sections.txt
+++ b/doc/gupnp-av-sections.txt
@@ -141,6 +141,7 @@ GUPNP_IS_DIDL_LITE_WRITER_CLASS
 GUPNP_DIDL_LITE_WRITER_GET_CLASS
 GUPNP_DIDL_LITE_WRITER_NAMESPACE_DC
 GUPNP_DIDL_LITE_WRITER_NAMESPACE_UPNP
+GUPNP_DIDL_LITE_WRITER_NAMESPACE_DLNA
 <SUBSECTION Private>
 GUPnPDIDLLiteWriterPrivate
 gupnp_didl_lite_writer_get_type
diff --git a/libgupnp-av/gupnp-didl-lite-object-private.h b/libgupnp-av/gupnp-didl-lite-object-private.h
index fab6492..2954e06 100644
--- a/libgupnp-av/gupnp-didl-lite-object-private.h
+++ b/libgupnp-av/gupnp-didl-lite-object-private.h
@@ -32,7 +32,8 @@ G_GNUC_INTERNAL GUPnPDIDLLiteObject *
 gupnp_didl_lite_object_new_from_xml     (xmlNode     *xml_node,
                                          GUPnPXMLDoc *xml_doc,
                                          xmlNs       *upnp_ns,
-                                         xmlNs       *dc_ns);
+                                         xmlNs       *dc_ns,
+                                         xmlNs       *dlna_ns);
 
 G_END_DECLS
 
diff --git a/libgupnp-av/gupnp-didl-lite-object.c b/libgupnp-av/gupnp-didl-lite-object.c
index f0dcbaa..db6e8af 100644
--- a/libgupnp-av/gupnp-didl-lite-object.c
+++ b/libgupnp-av/gupnp-didl-lite-object.c
@@ -49,6 +49,7 @@ struct _GUPnPDIDLLiteObjectPrivate {
 
         xmlNs *upnp_ns;
         xmlNs *dc_ns;
+        xmlNs *dlna_ns;
 };
 
 enum {
@@ -57,6 +58,7 @@ enum {
         PROP_XML_DOC,
         PROP_UPNP_NAMESPACE,
         PROP_DC_NAMESPACE,
+        PROP_DLNA_NAMESPACE,
         PROP_ID,
         PROP_PARENT_ID,
         PROP_RESTRICTED,
@@ -120,6 +122,9 @@ gupnp_didl_lite_object_set_property (GObject      *object,
         case PROP_DC_NAMESPACE:
                 didl_object->priv->dc_ns = g_value_get_pointer (value);
                 break;
+        case PROP_DLNA_NAMESPACE:
+                didl_object->priv->dlna_ns = g_value_get_pointer (value);
+                break;
         case PROP_ID:
                 gupnp_didl_lite_object_set_id (didl_object,
                                                g_value_get_string (value));
@@ -227,6 +232,11 @@ gupnp_didl_lite_object_get_property (GObject    *object,
                         (value,
                          gupnp_didl_lite_object_get_dc_namespace
                                 (didl_object));
+        case PROP_DLNA_NAMESPACE:
+                g_value_set_pointer
+                        (value,
+                         gupnp_didl_lite_object_get_dlna_namespace
+                                (didl_object));
                 break;
         case PROP_ID:
                 g_value_set_string
@@ -422,6 +432,27 @@ gupnp_didl_lite_object_class_init (GUPnPDIDLLiteObjectClass *klass)
                                        G_PARAM_STATIC_BLURB));
 
         /**
+         * GUPnPDIDLLiteObject:dlna-namespace
+         *
+         * Pointer to the DLNA metadata namespace registered with the XML
+         * document containing this object.
+         *
+         **/
+        g_object_class_install_property
+                (object_class,
+                 PROP_DLNA_NAMESPACE,
+                 g_param_spec_pointer ("dlna-namespace",
+                                       "XML namespace",
+                                       "Pointer to the DLNA metadata namespace "
+                                       "registered with the XML document "
+                                       "containing this object.",
+                                       G_PARAM_READWRITE |
+                                       G_PARAM_CONSTRUCT_ONLY |
+                                       G_PARAM_STATIC_NAME |
+                                       G_PARAM_STATIC_NICK |
+                                       G_PARAM_STATIC_BLURB));
+
+        /**
          * GUPnPDIDLLiteObject:id
          *
          * The ID of this object.
@@ -754,6 +785,7 @@ get_contributor_list_by_name (GUPnPDIDLLiteObject *object,
  * @xml_doc: The reference to XML document containing this object
  * @upnp_ns: The pointer to 'upnp' namespace in XML document
  * @dc_ns: The pointer to 'dc' namespace in XML document
+ * @dlna_ns: The pointer to 'dlna' namespace in XML document
  *
  * Creates a new #GUPnPDIDLLiteObject for the @xml_node.
  *
@@ -763,12 +795,14 @@ GUPnPDIDLLiteObject *
 gupnp_didl_lite_object_new_from_xml (xmlNode     *xml_node,
                                      GUPnPXMLDoc *xml_doc,
                                      xmlNs       *upnp_ns,
-                                     xmlNs       *dc_ns)
+                                     xmlNs       *dc_ns,
+                                     xmlNs       *dlna_ns)
 {
         g_return_val_if_fail (xml_node != NULL, NULL);
         g_return_val_if_fail (xml_node->name != NULL, NULL);
         g_return_val_if_fail (upnp_ns != NULL, NULL);
         g_return_val_if_fail (dc_ns != NULL, NULL);
+        g_return_val_if_fail (dlna_ns != NULL, NULL);
 
         if (g_ascii_strcasecmp ((char *) xml_node->name, "container") == 0)
                 return g_object_new (GUPNP_TYPE_DIDL_LITE_CONTAINER,
@@ -776,6 +810,7 @@ gupnp_didl_lite_object_new_from_xml (xmlNode     *xml_node,
                                      "xml-doc", xml_doc,
                                      "upnp-namespace", upnp_ns,
                                      "dc-namespace", dc_ns,
+                                     "dlna-namespace", dlna_ns,
                                      NULL);
         else if (g_ascii_strcasecmp ((char *) xml_node->name, "item") == 0)
                 return g_object_new (GUPNP_TYPE_DIDL_LITE_ITEM,
@@ -783,6 +818,7 @@ gupnp_didl_lite_object_new_from_xml (xmlNode     *xml_node,
                                      "xml-doc", xml_doc,
                                      "upnp-namespace", upnp_ns,
                                      "dc-namespace", dc_ns,
+                                     "dlna-namespace", dlna_ns,
                                      NULL);
         else
                 return NULL;
@@ -855,6 +891,23 @@ gupnp_didl_lite_object_get_upnp_class (GUPnPDIDLLiteObject *object)
 }
 
 /**
+ * gupnp_didl_lite_object_get_dlna_namespace:
+ * @object: The #GUPnPDIDLLiteObject
+ *
+ * Get the pointer to the DLNA metadata namespace registered with the XML
+ * document containing this object.
+ *
+ * Return value: The pointer to DLNA namespace in XML document.
+ **/
+xmlNsPtr
+gupnp_didl_lite_object_get_dlna_namespace (GUPnPDIDLLiteObject *object)
+{
+        g_return_val_if_fail (GUPNP_IS_DIDL_LITE_OBJECT (object), NULL);
+
+        return object->priv->dlna_ns;
+}
+
+/**
  * gupnp_didl_lite_object_get_id
  * @object: #GUPnPDIDLLiteObject
  *
@@ -1683,7 +1736,6 @@ gupnp_didl_lite_object_set_album_art (GUPnPDIDLLiteObject *object,
                                       const char          *album_art)
 {
         xmlNode *node;
-        xmlNs *dlna_ns;
 
         g_return_if_fail (object != NULL);
         g_return_if_fail (GUPNP_IS_DIDL_LITE_OBJECT (object));
@@ -1693,14 +1745,9 @@ gupnp_didl_lite_object_set_album_art (GUPnPDIDLLiteObject *object,
                                    object->priv->xml_doc->doc,
                                    "albumArtURI",
                                    album_art);
-
-        dlna_ns = xmlNewNs (node,
-                            (const unsigned char *)
-                            "urn:schemas-dlna-org:metadata-2-0/",
-                            (const unsigned char *) "dlna");
         xmlSetNsProp (node,
-                      dlna_ns,
-                      (const unsigned char *) "profileID",
+                      object->priv->dlna_ns,
+		      (const unsigned char *) "profileID",
                       (const unsigned char *) "JPEG_TN");
 
         g_object_notify (G_OBJECT (object), "album-art");
diff --git a/libgupnp-av/gupnp-didl-lite-object.h b/libgupnp-av/gupnp-didl-lite-object.h
index 9f36dab..0a1a909 100644
--- a/libgupnp-av/gupnp-didl-lite-object.h
+++ b/libgupnp-av/gupnp-didl-lite-object.h
@@ -87,6 +87,10 @@ gupnp_didl_lite_object_get_upnp_namespace
 xmlNsPtr
 gupnp_didl_lite_object_get_dc_namespace (GUPnPDIDLLiteObject *object);
 
+xmlNsPtr
+gupnp_didl_lite_object_get_dlna_namespace
+                                        (GUPnPDIDLLiteObject *object);
+
 const char *
 gupnp_didl_lite_object_get_upnp_class   (GUPnPDIDLLiteObject *object);
 
diff --git a/libgupnp-av/gupnp-didl-lite-parser.c b/libgupnp-av/gupnp-didl-lite-parser.c
index ad554ae..18e4c89 100644
--- a/libgupnp-av/gupnp-didl-lite-parser.c
+++ b/libgupnp-av/gupnp-didl-lite-parser.c
@@ -168,6 +168,7 @@ gupnp_didl_lite_parser_parse_didl (GUPnPDIDLLiteParser *parser,
         xmlNs       **ns_list;
         xmlNs        *upnp_ns = NULL;
         xmlNs        *dc_ns   = NULL;
+        xmlNs        *dlna_ns   = NULL;
         GUPnPXMLDoc  *xml_doc;
 
         doc = xmlRecoverMemory (didl, strlen (didl));
@@ -225,6 +226,9 @@ gupnp_didl_lite_parser_parse_didl (GUPnPDIDLLiteParser *parser,
                         else if (! dc_ns &&
                                  g_ascii_strcasecmp (prefix, "dc") == 0)
                                 dc_ns = ns_list[i];
+                        else if (! dlna_ns &&
+                                 g_ascii_strcasecmp (prefix, "dlna") == 0)
+                                dlna_ns = ns_list[i];
                 }
 
                 xmlFree (ns_list);
@@ -243,6 +247,12 @@ gupnp_didl_lite_parser_parse_didl (GUPnPDIDLLiteParser *parser,
                                   "http://purl.org/dc/elements/1.1/",
                                   (unsigned char *)
                                   GUPNP_DIDL_LITE_WRITER_NAMESPACE_DC);
+        if (! dlna_ns)
+                dlna_ns = xmlNewNs (xmlDocGetRootElement (doc),
+                                    (unsigned char *)
+                                    "urn:schemas-dlna-org:metadata-2-0/",
+                                    (unsigned char *)
+                                    GUPNP_DIDL_LITE_WRITER_NAMESPACE_DLNA);
 
         xml_doc = gupnp_xml_doc_new (doc);
 
@@ -250,7 +260,8 @@ gupnp_didl_lite_parser_parse_didl (GUPnPDIDLLiteParser *parser,
                 GUPnPDIDLLiteObject *object;
 
                 object = gupnp_didl_lite_object_new_from_xml (element, xml_doc,
-                                                              upnp_ns, dc_ns);
+                                                              upnp_ns, dc_ns,
+                                                              dlna_ns);
 
                 if (object == NULL)
                         continue;
diff --git a/libgupnp-av/gupnp-didl-lite-writer.c b/libgupnp-av/gupnp-didl-lite-writer.c
index 49c3027..d4dac3a 100644
--- a/libgupnp-av/gupnp-didl-lite-writer.c
+++ b/libgupnp-av/gupnp-didl-lite-writer.c
@@ -43,6 +43,7 @@ struct _GUPnPDIDLLiteWriterPrivate {
 
         xmlNs       *upnp_ns;
         xmlNs       *dc_ns;
+        xmlNs       *dlna_ns;
 
         char        *language;
 };
@@ -309,6 +310,11 @@ gupnp_didl_lite_writer_constructed (GObject *object)
                                   "urn:schemas-upnp-org:metadata-1-0/upnp/",
                                   (unsigned char *)
                                   GUPNP_DIDL_LITE_WRITER_NAMESPACE_UPNP);
+        priv->dlna_ns = xmlNewNs (priv->xml_node,
+                                  (unsigned char *)
+                                  "urn:schemas-dlna-org:metadata-2-0/",
+                                  (unsigned char *)
+                                  GUPNP_DIDL_LITE_WRITER_NAMESPACE_DLNA);
         xmlNewNs (priv->xml_node,
                   (unsigned char *)
                   "urn:schemas-upnp-org:metadata-1-0/DIDL-Lite/",
@@ -447,7 +453,8 @@ gupnp_didl_lite_writer_add_item (GUPnPDIDLLiteWriter *writer)
         object = gupnp_didl_lite_object_new_from_xml (item_node,
                                                       writer->priv->xml_doc,
                                                       writer->priv->upnp_ns,
-                                                      writer->priv->dc_ns);
+                                                      writer->priv->dc_ns,
+                                                      writer->priv->dlna_ns);
         return GUPNP_DIDL_LITE_ITEM (object);
 }
 
@@ -475,7 +482,8 @@ gupnp_didl_lite_writer_add_container (GUPnPDIDLLiteWriter *writer)
         object = gupnp_didl_lite_object_new_from_xml (container_node,
                                                       writer->priv->xml_doc,
                                                       writer->priv->upnp_ns,
-                                                      writer->priv->dc_ns);
+                                                      writer->priv->dc_ns,
+                                                      writer->priv->dlna_ns);
         return GUPNP_DIDL_LITE_CONTAINER (object);
 }
 
diff --git a/libgupnp-av/gupnp-didl-lite-writer.h b/libgupnp-av/gupnp-didl-lite-writer.h
index dfcca04..cb46730 100644
--- a/libgupnp-av/gupnp-didl-lite-writer.h
+++ b/libgupnp-av/gupnp-didl-lite-writer.h
@@ -79,6 +79,7 @@ typedef struct {
 
 #define GUPNP_DIDL_LITE_WRITER_NAMESPACE_DC   "dc"
 #define GUPNP_DIDL_LITE_WRITER_NAMESPACE_UPNP "upnp"
+#define GUPNP_DIDL_LITE_WRITER_NAMESPACE_DLNA "dlna"
 
 GUPnPDIDLLiteWriter *
 gupnp_didl_lite_writer_new              (const char *language);
-- 
1.7.9.5

