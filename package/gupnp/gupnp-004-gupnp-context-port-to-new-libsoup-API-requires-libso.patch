From c257e0dbe2470233d5b64b37bce6278a00b29d9a Mon Sep 17 00:00:00 2001
From: Sven Neumann <neumann@teufel.de>
Date: Fri, 14 Nov 2014 15:31:50 +0100
Subject: [PATCH] gupnp-context: port to new libsoup API (requires libsoup
 2.48)

Signed-off-by: Sven Neumann <neumann@teufel.de>
---
 configure.ac             |  2 +-
 libgupnp/gupnp-context.c | 66 +++++++++++++++++++++---------------------------
 2 files changed, 30 insertions(+), 38 deletions(-)

diff --git a/configure.ac b/configure.ac
index 6e4b75e..5aeef31 100644
--- a/configure.ac
+++ b/configure.ac
@@ -51,7 +51,7 @@ PKG_CHECK_MODULES(LIBGUPNP, glib-2.0 >= 2.28.0 \
                             gio-2.0 \
                             gmodule-2.0 \
                             gssdp-1.0 >= 0.13.0 \
-                            libsoup-2.4 >= 2.28.2 \
+                            libsoup-2.4 >= 2.48.0 \
                             libxml-2.0 \
                             $UUID_LIBS)
 PKG_CHECK_MODULES(GTHREAD, gthread-2.0)
diff --git a/libgupnp/gupnp-context.c b/libgupnp/gupnp-context.c
index 935feb5..adc0dea 100644
--- a/libgupnp/gupnp-context.c
+++ b/libgupnp/gupnp-context.c
@@ -581,31 +581,26 @@ gupnp_context_get_server (GUPnPContext *context)
         g_return_val_if_fail (GUPNP_IS_CONTEXT (context), NULL);
 
         if (context->priv->server == NULL) {
-                const char *ip;
-
-                ip =  gssdp_client_get_host_ip (GSSDP_CLIENT (context));
-                SoupAddress *addr = soup_address_new (ip, context->priv->port);
-                soup_address_resolve_sync (addr, NULL);
-
-                context->priv->server = soup_server_new
-                        (SOUP_SERVER_PORT,
-                         context->priv->port,
-                         SOUP_SERVER_ASYNC_CONTEXT,
-                         g_main_context_get_thread_default (),
-                         SOUP_SERVER_INTERFACE,
-                         addr,
-                         NULL);
-                g_object_unref (addr);
-
-                if (context->priv->server) {
-                        soup_server_add_handler (context->priv->server,
-                                                 NULL,
-                                                 default_server_handler,
-                                                 context,
-                                                 NULL);
+                context->priv->server = soup_server_new (NULL, NULL);
 
-                        soup_server_run_async (context->priv->server);
+                soup_server_add_handler (context->priv->server,
+                                         NULL,
+                                         default_server_handler,
+                                         context,
+                                         NULL);
+
+                const char *ip = gssdp_client_get_host_ip (GSSDP_CLIENT (context));
+                const guint port = context->priv->port;
+                GSocketAddress *addr = g_inet_socket_address_new_from_string (ip, port);
+                GError *error = NULL;
+
+                if (! soup_server_listen (context->priv->server,
+                                          addr, (SoupServerListenOptions) 0, &error)) {
+                        g_warning ("GUPnPContext: Unable to listen on %s:%u %s", ip, port, error->message);
+                        g_error_free (error);
                 }
+
+                g_object_unref (addr);
         }
 
         return context->priv->server;
@@ -617,18 +612,13 @@ gupnp_context_get_server (GUPnPContext *context)
 static char *
 make_server_url (GUPnPContext *context)
 {
-        SoupServer *server;
-        guint port;
+        SoupServer *server = gupnp_context_get_server (context);
+        GSList *uris = soup_server_get_uris (server);
+        gchar *url = uris ? soup_uri_to_string (uris->data, FALSE) : NULL;
 
-        /* What port are we running on? */
-        server = gupnp_context_get_server (context);
-        port = soup_server_get_port (server);
+        g_slist_free_full (uris, (GDestroyNotify) soup_uri_free);
 
-        /* Put it all together */
-        return g_strdup_printf
-                        ("http://%s:%u",
-                         gssdp_client_get_host_ip (GSSDP_CLIENT (context)),
-                         port);
+        return url;
 }
 
 const char *
@@ -702,12 +692,14 @@ gupnp_context_get_host_ip (GUPnPContext *context)
 guint
 gupnp_context_get_port (GUPnPContext *context)
 {
-        SoupServer *server;
-
         g_return_val_if_fail (GUPNP_IS_CONTEXT (context), 0);
 
-        server = gupnp_context_get_server (context);
-        return soup_server_get_port (server);
+        SoupServer *server = gupnp_context_get_server (context);
+        GSList *uris = soup_server_get_uris (server);
+        guint port = port ? soup_uri_get_port (uris->data) : 0;
+        g_slist_free_full (uris, (GDestroyNotify) soup_uri_free);
+
+        return port;
 }
 
 /**
-- 
1.9.1

