From 1785828335be5a507dab74a90d2b27a56283929e Mon Sep 17 00:00:00 2001
From: Zeeshan Ali (Khattak) <zeeshanak@gnome.org>
Date: Sun, 15 Nov 2009 17:29:00 +0200
Subject: [PATCH] Get rid of redundant loop

There is only one child node inside 'property' node so no need to interate
over all it's children nodes.
---
 libgupnp/gupnp-service-proxy.c |   62 ++++++++++++++++++---------------------
 1 files changed, 29 insertions(+), 33 deletions(-)

diff --git a/libgupnp/gupnp-service-proxy.c b/libgupnp/gupnp-service-proxy.c
index f601920..463bc5f 100644
--- a/libgupnp/gupnp-service-proxy.c
+++ b/libgupnp/gupnp-service-proxy.c
@@ -1335,49 +1335,45 @@ static void emit_notification (GUPnPServiceProxy *proxy,
         /* Iterate over all provided properties */
         for (node = node->children; node; node = node->next) {
                 xmlNode *var_node;
+                NotifyData *data;
+                GValue value = {0, };
+                GList *l;
 
-                if (strcmp ((char *) node->name, "property") != 0)
-                        continue;
-
-                /* property */
-                for (var_node = node->children;
-                     var_node;
-                     var_node = var_node->next) {
-                        NotifyData *data;
-                        GValue value = {0, };
-                        GList *l;
+                /* variableName node */
+                var_node = node->children;
 
-                        data = g_hash_table_lookup (proxy->priv->notify_hash,
-                                                    var_node->name);
-                        if (data == NULL)
-                                continue;
+                if (var_node == NULL ||
+                    strcmp ((char *) node->name, "property") != 0)
+                        continue;
 
-                        /* Make a GValue of the desired type */
-                        g_value_init (&value, data->type);
+                data = g_hash_table_lookup (proxy->priv->notify_hash,
+                                            var_node->name);
+                if (data == NULL)
+                        continue;
 
-                        if (!gvalue_util_set_value_from_xml_node (&value,
-                                                                  var_node)) {
-                                g_value_unset (&value);
+                /* Make a GValue of the desired type */
+                g_value_init (&value, data->type);
 
-                                continue;
-                        }
+                if (!gvalue_util_set_value_from_xml_node (&value, var_node)) {
+                        g_value_unset (&value);
 
-                        /* Call callbacks */
-                        for (l = data->callbacks; l; l = l->next) {
-                                CallbackData *callback_data;
+                        continue;
+                }
 
-                                callback_data = l->data;
+                /* Call callbacks */
+                for (l = data->callbacks; l; l = l->next) {
+                        CallbackData *callback_data;
 
-                                callback_data->callback
-                                        (proxy,
-                                         (const char *) var_node->name,
-                                         &value,
-                                         callback_data->user_data);
-                        }
+                        callback_data = l->data;
 
-                        /* Cleanup */
-                        g_value_unset (&value);
+                        callback_data->callback (proxy,
+                                                 (const char *) var_node->name,
+                                                 &value,
+                                                 callback_data->user_data);
                 }
+
+                /* Cleanup */
+                g_value_unset (&value);
         }
 }
 
-- 
1.6.1

