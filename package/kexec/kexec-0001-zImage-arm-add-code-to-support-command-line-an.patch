From 4192cd9a3e171a1149f0a6eb7b221b5e3e15c1c8 Mon Sep 17 00:00:00 2001
From: Daniel Mack <zonque@gmail.com>
Date: Wed, 12 Dec 2012 16:39:30 +0100
Subject: [PATCH] kexec-zImage-arm: add code to support --command-line and
 --dtb

If --dtb is called together with --command-line, we need to modify the
binary dtb buffer. Luckily, we have libfdt functions available, so this
is just a matter of some lines.

Signed-off-by: Daniel Mack <zonque@gmail.com>
---
 kexec/arch/arm/kexec-zImage-arm.c | 48 ++++++++++++++++++++++++++++++++++-----
 1 file changed, 42 insertions(+), 6 deletions(-)

diff --git a/kexec/arch/arm/kexec-zImage-arm.c b/kexec/arch/arm/kexec-zImage-arm.c
index 46cedbf..e53cbca 100644
--- a/kexec/arch/arm/kexec-zImage-arm.c
+++ b/kexec/arch/arm/kexec-zImage-arm.c
@@ -359,6 +359,48 @@ int zImage_arm_load(int argc, char **argv, const char *buf, off_t len,
 		 */
 		if (dtb_file) {
 			dtb_buf = slurp_file(dtb_file, &dtb_length);
+
+			if (fdt_check_header(dtb_buf) != 0) {
+				fprintf(stderr, "Invalid FDT buffer.\n");
+				return -1;
+			}
+
+			if (command_line) {
+				char *prop_name = "bootargs";
+				int off;
+
+				/* check if a /choosen subnode already exists */
+				off = fdt_path_offset(dtb_buf, "/chosen");
+
+				if (off == -FDT_ERR_NOTFOUND) {
+					dtb_length = fdt_totalsize(dtb_buf)
+							+ strlen("/chosen"),
+							+ sizeof(struct fdt_node_header)
+							+ FDT_TAGSIZE;
+					dtb_buf = xrealloc(dtb_buf, dtb_length);
+					fdt_set_totalsize(dtb_buf, dtb_length);
+					off = fdt_add_subnode(dtb_buf, off, "/chosen");
+				}
+
+				if (off < 0) {
+					fprintf(stderr, "FDT: Error adding /chosen node.\n");
+					return -1;
+				}
+
+				dtb_length = fdt_totalsize(dtb_buf)
+						+ strlen(prop_name)
+						+ strlen(command_line) + 1
+						+ sizeof(struct fdt_property);
+				dtb_buf = xrealloc(dtb_buf, dtb_length);
+				fdt_set_totalsize(dtb_buf, dtb_length);
+
+				if (fdt_setprop(dtb_buf, off, prop_name,
+						command_line, strlen(command_line) + 1) != 0) {
+					fprintf(stderr, "FDT: Error setting /chosen/%s property.\n",
+						prop_name);
+					return -1;
+				}
+			}
 		} else {
 			/*
 			 * Extract the DTB from /proc/device-tree.
@@ -366,11 +408,6 @@ int zImage_arm_load(int argc, char **argv, const char *buf, off_t len,
 			create_flatten_tree(&dtb_buf, &dtb_length, command_line);
 		}
 
-		if (fdt_check_header(dtb_buf) != 0) {
-			fprintf(stderr, "Invalid FDT buffer.\n");
-			return -1;
-		}
-
 		if (base + atag_offset + dtb_length > base + offset) {
 			fprintf(stderr, "DTB too large!\n");
 			return -1;
@@ -394,6 +431,5 @@ int zImage_arm_load(int argc, char **argv, const char *buf, off_t len,
 	add_segment(info, buf, len, base + offset, len);
 
 	info->entry = (void*)base + offset;
-
 	return 0;
 }
-- 
1.7.11.7

