diff -ur taglib-extras-0.1.4-orig/taglib-extras/mp4/mp4item.cpp taglib-extras-0.1.4/taglib-extras/mp4/mp4item.cpp
--- taglib-extras-0.1.4-orig/taglib-extras/mp4/mp4item.cpp	2009-03-22 18:07:16.000000000 +0100
+++ taglib-extras-0.1.4/taglib-extras/mp4/mp4item.cpp	2009-08-13 11:26:38.000000000 +0200
@@ -41,6 +41,7 @@
     IntPair m_intPair;
   };
   StringList m_stringList;
+  ByteVector m_byteVector;
 };
 
 MP4::Item::Item()
@@ -97,6 +98,12 @@
   d->m_stringList = value;
 }
 
+MP4::Item::Item(const ByteVector &value)
+{
+  d = new ItemPrivate;
+  d->m_byteVector = value;
+}
+
 bool
 MP4::Item::toBool() const
 {
@@ -121,6 +128,12 @@
   return d->m_stringList;
 }
 
+ByteVector
+MP4::Item::toByteVector() const
+{
+  return d->m_byteVector;
+}
+
 bool
 MP4::Item::isValid() const
 {
diff -ur taglib-extras-0.1.4-orig/taglib-extras/mp4/mp4item.h taglib-extras-0.1.4/taglib-extras/mp4/mp4item.h
--- taglib-extras-0.1.4-orig/taglib-extras/mp4/mp4item.h	2009-03-12 22:15:06.000000000 +0100
+++ taglib-extras-0.1.4/taglib-extras/mp4/mp4item.h	2009-08-13 11:27:03.000000000 +0200
@@ -49,11 +49,13 @@
       Item(bool value);
       Item(int first, int second);
       Item(const StringList &value);
+      Item(const ByteVector &value);
 
       int toInt() const;
       bool toBool() const;
       IntPair toIntPair() const;
       StringList toStringList() const;
+      ByteVector toByteVector() const;
 
       bool isValid() const;
 
diff -ur taglib-extras-0.1.4-orig/taglib-extras/mp4/mp4tag.cpp taglib-extras-0.1.4/taglib-extras/mp4/mp4tag.cpp
--- taglib-extras-0.1.4-orig/taglib-extras/mp4/mp4tag.cpp	2009-04-29 17:56:41.000000000 +0200
+++ taglib-extras-0.1.4/taglib-extras/mp4/mp4tag.cpp	2009-08-13 11:29:01.000000000 +0200
@@ -67,6 +67,9 @@
     else if(atom->name == "tmpo") {
       parseInt(atom, file);
     }
+    else if(atom->name == "covr") {
+      parseBinary(atom, file);
+    }
     else {
       parseText(atom, file);
     }
@@ -144,6 +147,15 @@
   }
 }
 
+void MP4::Tag::parseBinary(Atom *atom, TagLib::File *file)
+{
+  ByteVectorList data = parseData(atom, file, -1);
+  if(data.size() > 0)
+  {
+    d->items.insert(atom->name, data[0]);
+  }
+}
+
 void
 MP4::Tag::parseText(MP4::Atom *atom, TagLib::File *file, int expectedFlags)
 {
diff -ur taglib-extras-0.1.4-orig/taglib-extras/mp4/mp4tag.h taglib-extras-0.1.4/taglib-extras/mp4/mp4tag.h
--- taglib-extras-0.1.4-orig/taglib-extras/mp4/mp4tag.h	2009-04-29 14:55:56.000000000 +0200
+++ taglib-extras-0.1.4/taglib-extras/mp4/mp4tag.h	2009-08-13 11:28:59.000000000 +0200
@@ -73,6 +73,7 @@
         void parseInt(Atom *atom, TagLib::File *file);
         void parseIntPair(Atom *atom, TagLib::File *file);
         void parseBool(Atom *atom, TagLib::File *file);
+        void parseBinary(Atom *atom, TagLib::File *file);
 
         TagLib::ByteVector padIlst(const ByteVector &data, int length = -1);
         TagLib::ByteVector renderAtom(const ByteVector &name, const TagLib::ByteVector &data);
