--- ../../buildroot_arm/output/build/taglib-1.5/taglib/fileref.cpp	2008-02-12 21:46:24.000000000 +0100
+++ ./taglib/fileref.cpp	2011-08-29 14:15:56.833951188 +0200
@@ -25,6 +25,7 @@
 
 #include <tfile.h>
 #include <tstring.h>
+#include <tdebug.h>
 
 #include "fileref.h"
 #include "mpegfile.h"
@@ -180,23 +181,31 @@
   // updated.  However at some point that list should be created at the same time
   // that a default file type resolver is created.
 
-  if(s.size() > 4) {
-    if(s.substr(s.size() - 4, 4).upper() == ".OGG")
-      return new Ogg::Vorbis::File(fileName, readAudioProperties, audioPropertiesStyle);
-    if(s.substr(s.size() - 4, 4).upper() == ".MP3")
-      return new MPEG::File(fileName, readAudioProperties, audioPropertiesStyle);
-    if(s.substr(s.size() - 4, 4).upper() == ".OGA")
-      return new Ogg::FLAC::File(fileName, readAudioProperties, audioPropertiesStyle);
-    if(s.substr(s.size() - 5, 5).upper() == ".FLAC")
-      return new FLAC::File(fileName, readAudioProperties, audioPropertiesStyle);
-    if(s.substr(s.size() - 4, 4).upper() == ".MPC")
-      return new MPC::File(fileName, readAudioProperties, audioPropertiesStyle);
-    if(s.substr(s.size() - 3, 3).upper() == ".WV")
-      return new WavPack::File(fileName, readAudioProperties, audioPropertiesStyle);
-    if(s.substr(s.size() - 4, 4).upper() == ".SPX")
-      return new Ogg::Speex::File(fileName, readAudioProperties, audioPropertiesStyle);
-    if(s.substr(s.size() - 4, 4).upper() == ".TTA")
-      return new TrueAudio::File(fileName, readAudioProperties, audioPropertiesStyle);
+  try
+  {
+    if(s.size() > 4) {
+      if(s.substr(s.size() - 4, 4).upper() == ".OGG")
+        return new Ogg::Vorbis::File(fileName, readAudioProperties, audioPropertiesStyle);
+      if(s.substr(s.size() - 4, 4).upper() == ".MP3")
+        return new MPEG::File(fileName, readAudioProperties, audioPropertiesStyle);
+      if(s.substr(s.size() - 4, 4).upper() == ".OGA")
+        return new Ogg::FLAC::File(fileName, readAudioProperties, audioPropertiesStyle);
+      if(s.substr(s.size() - 5, 5).upper() == ".FLAC")
+        return new FLAC::File(fileName, readAudioProperties, audioPropertiesStyle);
+      if(s.substr(s.size() - 4, 4).upper() == ".MPC")
+        return new MPC::File(fileName, readAudioProperties, audioPropertiesStyle);
+      if(s.substr(s.size() - 3, 3).upper() == ".WV")
+        return new WavPack::File(fileName, readAudioProperties, audioPropertiesStyle);
+      if(s.substr(s.size() - 4, 4).upper() == ".SPX")
+        return new Ogg::Speex::File(fileName, readAudioProperties, audioPropertiesStyle);
+      if(s.substr(s.size() - 4, 4).upper() == ".TTA")
+        return new TrueAudio::File(fileName, readAudioProperties, audioPropertiesStyle);
+    }
+  }
+  catch(const char *error)
+  {
+    debug("catched exception: ");
+    debug(error);
   }
 
   return 0;
