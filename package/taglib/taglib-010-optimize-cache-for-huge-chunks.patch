--- taglib-1.5/taglib/toolkit/tfile.cpp	2010-01-18 17:48:51.000000000 +0100
+++ taglib-1.5/taglib/toolkit/tfile.cpp	2010-02-09 09:20:00.000000000 +0100
@@ -69,7 +69,7 @@
     enum
     {
       CACHE_LINE_SIZE = 1024 * 16,
-      MAX_NUM_CACHE_LINES = 16
+      MAX_NUM_CACHE_LINES = 64
     };
 
     struct CacheLine
@@ -200,6 +200,16 @@
         return 0;
       }
 
+      if(len >= (CACHE_LINE_SIZE * MAX_NUM_CACHE_LINES))
+      {
+        // we do not cache huge chunks
+        gsize numBytes = 0;
+        g_seekable_seek((GSeekable*) stream, seekPos, G_SEEK_SET, NULL, NULL);
+        g_input_stream_read_all((GInputStream*) stream, buf, len, &numBytes, NULL, NULL);
+        seekPos += numBytes;
+        return numBytes;
+      }
+
       int cacheLinePos = getCacheLinePos(seekPos);
       int overhead = seekPos - cacheLinePos;
       aquire(cacheLinePos, len + overhead);
@@ -241,8 +251,18 @@
   tFile *open(const char *uri, const char*)
   {
     GIOFile *ret = new GIOFile;
+    GError *error = NULL;
+
     GFile *file = g_file_new_for_uri(uri);
-    ret->stream = g_file_read(file, NULL, NULL);
+    ret->stream = g_file_read(file, NULL, &error);
+
+    if(error)
+    {
+      g_print("error open input stream %s: %s", uri, error->message);
+      g_error_free(error);
+      return NULL;
+    }
+
     ret->length = 0;
     ret->seekPos = 0;
 
