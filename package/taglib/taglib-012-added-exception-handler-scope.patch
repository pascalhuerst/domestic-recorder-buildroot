From 25d3335ccab3bacceb218ac501190069fd5be811 Mon Sep 17 00:00:00 2001
From: Max Blagay <max.blagaj@gmail.com>
Date: Fri, 10 Oct 2014 16:00:55 +0200
Subject: [PATCH] added exception handler scope

---
 taglib/toolkit/tbytevector.h | 73 ++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 73 insertions(+)

diff --git a/taglib/toolkit/tbytevector.h b/taglib/toolkit/tbytevector.h
index 538565b..184b7d2 100644
--- a/taglib/toolkit/tbytevector.h
+++ b/taglib/toolkit/tbytevector.h
@@ -31,9 +31,82 @@
 
 #include <vector>
 #include <iostream>
+#include <tr1/functional>
 
 namespace TagLib {
 
+  class TAGLIB_EXPORT ExceptionHandlingScope
+  {
+      struct ScopeGuard
+      {
+        private:
+          ExceptionHandlingScope &m_var;
+
+        public:
+          ScopeGuard(ExceptionHandlingScope &b) : m_var(b)
+          {
+            m_var.isCatching(true);
+          }
+
+          ~ScopeGuard()
+          {
+            m_var.isCatching(false);
+          }
+      };
+
+    public:
+      typedef std::tr1::function<void (const char*)> tOnException;
+
+      template<typename TRet>
+      TRet tryFunction(std::tr1::function<TRet (void)> func, tOnException onException = tOnException())
+      {
+        try
+        {
+          ScopeGuard guard(*this);
+          return func();
+        }
+        catch(const char *e)
+        {
+          if(onException)
+            onException(e);
+        }
+        return TRet();
+      }
+
+      void tryFunction(std::tr1::function<void (void)> func, tOnException onException = tOnException())
+      {
+        try
+        {
+          ScopeGuard guard(*this);
+          func();
+        }
+        catch(const char *error)
+        {
+          if(onException)
+            onException(error);
+        }
+      }
+
+      static bool throwException(const char *error)
+      {
+        if(isCatching(false))
+        {
+          throw error;
+          return true;
+        }
+        return false;
+      }
+
+    private:
+      static bool isCatching(bool v)
+      {
+        static bool isCatching = false;
+        bool old = isCatching;
+        isCatching = v;
+        return old;
+      }
+  };
+
   //! A byte vector
 
   /*!
-- 
1.9.1

