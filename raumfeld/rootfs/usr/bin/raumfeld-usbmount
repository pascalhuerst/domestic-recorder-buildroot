#!/bin/sh

# set -e
# exec > /dev/null 2>&1

# This file is free software; the copyright holder gives unlimited
# permission to copy and/or distribute it, with or without
# modifications, as long as this notice is preserved.

log()
{
    echo "usbmount -- $1" | logger
}

if test "$1" = add; then

    # There are USB sticks that are reported to have a broken
    # file-system on sda and a valid one on sda1. So whenever
    # we are called for the raw device, wait a little and check
    # if any partitions are showing up.
    case $DEVNAME in
    	/dev/sd?)
    	    sleep 2
    	    for i in 1 2 3 4; do
    	    	if [ -b $DEVNAME$i ]; then
    	    	    exit 0
    	    	fi
    	    done
    	;;
    esac

    log "handle insertion of $DEVNAME"

    if [ -z "$ID_FS_UUID" ]; then
        log "unable to determine UUID"
    	exit 0
    fi

    log "UUID is $ID_FS_UUID"

    MOUNT_POINT="/media/$ID_FS_UUID"

    log "creating mount point $MOUNT_POINT"

    mkdir -p $MOUNT_POINT

    # add /sbin to PATH so that the mount.ntfs helper is found
    PATH="$PATH:/sbin"

    log "starting usbmount add"

    MOUNTPOINTS=$MOUNT_POINT PATH=$PATH /usr/share/usbmount/usbmount add

elif test "$1" = remove; then

    log "handle removal of $DEVNAME"

    MOUNT_POINT=`mount | grep $DEVNAME | awk '{print $3}'`

    log "starting usbmount remove"

    MOUNTPOINTS=$MOUNT_POINT /usr/share/usbmount/usbmount remove

    log "removing mount point $MOUNT_POINT"

    rmdir $MOUNT_POINT

fi

exit 0
