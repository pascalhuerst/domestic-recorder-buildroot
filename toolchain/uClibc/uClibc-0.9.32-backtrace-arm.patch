--- uClibc-0.9.32-orig/libubacktrace/backtrace.c	2011-06-08 21:35:20.000000000 +0200
+++ uClibc-0.9.32/libubacktrace/backtrace.c	2011-07-13 12:41:43.000000000 +0200
@@ -34,16 +34,55 @@
 };
 
 static _Unwind_Reason_Code (*unwind_backtrace) (_Unwind_Trace_Fn, void *);
+
+
+/*  _Unwind_GetIP() is implemented as a macro on ARM_EABI  */
+#ifdef __ARM_EABI_UNWINDER__
+
+static _Unwind_VRS_Result (*unwind_vrs_get) (_Unwind_Context *, _Unwind_VRS_RegClass,
+                                             _uw, _Unwind_VRS_DataRepresentation,
+                                             void *);
+
+static inline _Unwind_Word _unwind_getgr (_Unwind_Context *context, int regno)
+{
+      _uw val;
+      unwind_vrs_get (context, _UVRSC_CORE, regno, _UVRSD_UINT32, &val);
+      return val;
+}
+
+static _Unwind_Ptr unwind_getip (struct _Unwind_Context *context)
+{
+        return (_unwind_getgr (context, 15) & ~(_Unwind_Word)1);
+}
+
+#else
+
 static _Unwind_Ptr (*unwind_getip) (struct _Unwind_Context *);
 
+#endif
+
+
 static void backtrace_init (void)
 {
 	void *handle = dlopen ("libgcc_s.so.1", RTLD_LAZY);
 
-	if (handle == NULL
-		|| ((unwind_backtrace = dlsym (handle, "_Unwind_Backtrace")) == NULL)
-		|| ((unwind_getip = dlsym (handle, "_Unwind_GetIP")) == NULL)) {
-		printf("libgcc_s.so.1 must be installed for backtrace to work\n");
+	if (handle == NULL) {
+		printf("libgcc_s.so.1 needs to be installed for backtrace to work\n");
+		abort();
+	}
+
+        if ((unwind_backtrace = dlsym (handle, "_Unwind_Backtrace")) == NULL) {
+		printf("_Unwind_Backtrace not found in libgcc_s.so.1\n");
+		abort();
+	}
+
+#ifdef __ARM_EABI_UNWINDER__
+	if ((unwind_vrs_get = dlsym (handle, "_Unwind_VRS_Get")) == NULL) {
+		printf("_Unwind_VRS_Get not found in libgcc_s.so.1\n");
+#else
+	if ((unwind_getip = dlsym (handle, "_Unwind_GetIP")) == NULL) {
+		printf("_Unwind_GetIP not found in libgcc_s.so.1\n");
+#endif
 		abort();
 	}
 }
